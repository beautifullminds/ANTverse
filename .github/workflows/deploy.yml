name: Deploy ANTVERSE frontend to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      # Node toolchain (no explicit cache path to avoid lockfile resolution errors)
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Configure Pages (recommended by GitHub for static deployments)
      - uses: actions/configure-pages@v5

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Detect & Build
        run: |
          set -e
          mkdir -p ../_site

          if [ -f next.config.js ] || [ -d pages ] || [ -d app ]; then
            echo "-> Next.js detected"
            npm run export || (npm run build && npm run export)
            if [ -d out ]; then cp -r out/* ../_site/; fi
          elif [ -f vite.config.ts ] || [ -f vite.config.js ]; then
            echo "-> Vite detected"
            npm run build
            cp -r dist/* ../_site/
          else
            echo "-> Assuming CRA or generic build"
            npm run build
            cp -r build/* ../_site/
          fi

          # Make sure Pages serves as a pure static site (no Jekyll processing)
          touch ../_site/.nojekyll

          # Custom domain
          echo "bmverse.io" > ../_site/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
